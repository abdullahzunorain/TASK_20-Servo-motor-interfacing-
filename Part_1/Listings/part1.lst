C51 COMPILER V9.60.7.0   PART1                                                             09/23/2024 16:10:44 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE PART1
OBJECT MODULE PLACED IN .\Objects\part1.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE part1.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\par
                    -t1.lst) TABS(2) OBJECT(.\Objects\part1.obj)

line level    source

   1          #include<reg51.h>
   2          sbit r1=P2^4;
   3          sbit r2=P2^3;
   4          sbit r3=P2^2;
   5          sbit output=P1^0;     //Output to motor
   6          sbit rs = P2^6;
   7          sbit rw = P2^5;
   8          sbit en = P2^7;
   9          sbit btn = P3^0;
  10          sbit btn1 = P3^1;
  11          
  12          
  13          void values_on_ssd(void);
  14          void display_num_7seg(unsigned char num);
  15          unsigned char values[4];
  16          unsigned char index=0;
  17          unsigned int select[]  =  {0x0C,0x08,0x04,0x00};
  18          void fun(unsigned char x);
  19          void lcd_data(unsigned char item);
  20          void lcd_cmd(unsigned char item);
  21          void lcd_data_int(int time_val) ;
  22          void lcd_DisplayString(char *string_ptr);
  23          unsigned int message[] = {0x3f,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x67,};
  24          void shape()           // Function to make degree sign
  25          {
  26   1        lcd_cmd(0xC4);
  27   1        lcd_data('D');
  28   1        lcd_data('E');
  29   1        lcd_data('G');
  30   1        lcd_data('R');
  31   1        lcd_data('E');
  32   1        lcd_data('E');
  33   1      
  34   1          
  35   1      }
  36          
  37          void delay(unsigned int msec)   // Function for delay
  38          {
  39   1        int i,j;
  40   1        for(i=0;i<msec;i++)
  41   1          for(j=0;j<1275;j++);
  42   1      } 
  43          
  44          void timer(int msec)   // Function for timer
  45          {
  46   1        int i;
  47   1        TR1=1;
  48   1        for(i=0;i<msec;i++)
  49   1        {
  50   2          while(TF1==0);
  51   2          TF1=0;
  52   2        }
  53   1        TR1=0;
  54   1      }
C51 COMPILER V9.60.7.0   PART1                                                             09/23/2024 16:10:44 PAGE 2   

  55          void main()
  56          {
  57   1        int i,p;
  58   1        char count;
  59   1            lcd_cmd(0x38);
  60   1        lcd_cmd(0x0E);
  61   1        lcd_cmd(0x01);
  62   1        TMOD=0x20;    // Mode2
  63   1        TH1= -23;   
  64   1        output=0;
  65   1        count=21;
  66   1      lcd_DisplayString(" SERVO ANGLE ");
  67   1        shape();
  68   1      while(1)
  69   1        {
  70   2          if(count>=104)
  71   2            count=21;
  72   2          else 
  73   2          {
  74   3            if(btn==0)
  75   3            {count=count+1;}
  76   3            if(btn1==0)
  77   3            {count=count-1;}
  78   3          }
  79   2          lcd_cmd(0xC0);
  80   2          p=2.5*(count-21);
  81   2              lcd_data_int(p);
  82   2          
  83   2          for(i=0;i<50;i++)
  84   2          {
  85   3              
  86   3            output=1;
  87   3            timer(count);    
  88   3            output=0;
  89   3            timer(360);
  90   3            display_num_7seg(p);
  91   3            if(p>180)
  92   3            {p=0;}
  93   3            values_on_ssd();
  94   3          }
  95   2      
  96   2        }
  97   1      }
  98          
  99          void lcd_data_int(int time_val)     // Function to send three digit number
 100          {
 101   1        int a;
 102   1        a = time_val/100;
 103   1          
 104   1        lcd_data(a+48);
 105   1        time_val = time_val%100;
 106   1        a = time_val/10;
 107   1        
 108   1        lcd_data(a+48);
 109   1        a = time_val%10;  
 110   1         
 111   1        lcd_data(a+48);
 112   1      }
 113          
 114          
 115          void lcd_cmd(unsigned char item)    // Function to send command to LCD
 116          {
C51 COMPILER V9.60.7.0   PART1                                                             09/23/2024 16:10:44 PAGE 3   

 117   1        P0 = item;
 118   1        rs= 0;
 119   1        rw=0;
 120   1        en=1;
 121   1        delay(1);
 122   1        en=0;
 123   1        return;
 124   1      } 
 125          
 126          void lcd_data(unsigned char item)   // Function to send one byte data to LCD
 127          {
 128   1        P0 = item;
 129   1        rs= 1;
 130   1        rw=0;
 131   1        en=1;
 132   1        delay(1);
 133   1        en=0;
 134   1      }
 135          void lcd_DisplayString(char *string_ptr)
 136          {
 137   1         while(*string_ptr)
 138   1          lcd_data(*string_ptr++);
 139   1          }
 140           
 141          void display_num_7seg(unsigned char num)
 142          {
 143   1       int i=3;
 144   1       while(num!=0)
 145   1       {
 146   2        values[i]=num%10;
 147   2         num=num/10;
 148   2         i--;
 149   2       }}
 150          void values_on_ssd(void)
 151           {
 152   1        switch(values[index])
 153   1        {
 154   2          case 0:
 155   2             {
 156   3             P2=select[index];
 157   3             P0=message[0]; 
 158   3                             
 159   3             }
 160   2             break;
 161   2          case 1:
 162   2             {
 163   3             P2=select[index];
 164   3             P0=message[1];    
 165   3             }
 166   2             break;
 167   2          case 2:
 168   2             {
 169   3             P2=select[index];
 170   3             P0=message[2];    
 171   3             }
 172   2             break;
 173   2          case 3:
 174   2             {
 175   3              P2=select[index];
 176   3             P0=message[3];    
 177   3             }
 178   2             break;
C51 COMPILER V9.60.7.0   PART1                                                             09/23/2024 16:10:44 PAGE 4   

 179   2          case 4:
 180   2             {
 181   3             P2=select[index];
 182   3             P0=message[4];    
 183   3             }
 184   2             break;
 185   2          case 5:
 186   2             {
 187   3              P2=select[index];
 188   3             P0=message[5];    
 189   3             }
 190   2             break;
 191   2          case 6:
 192   2             {
 193   3              P2=select[index];
 194   3             P0=message[6];    
 195   3             }
 196   2             break;
 197   2          case 7:
 198   2             {
 199   3             P2=select[index];
 200   3             P0=message[7];    
 201   3             }
 202   2             break;
 203   2          case 8:
 204   2             {
 205   3             P2=select[index];
 206   3             P0=message[8];    
 207   3             }
 208   2             break;
 209   2          case 9:
 210   2             {
 211   3             P2=select[index];
 212   3             P0=message[9];    
 213   3             }
 214   2             break;
 215   2        default:
 216   2          break;
 217   2        }
 218   1       index+=1;
 219   1        if(index > 3)
 220   1                {
 221   2                  index=0;
 222   2                }
 223   1              }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    659    ----
   CONSTANT SIZE    =     14    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     33      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
